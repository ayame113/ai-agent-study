name: Build and Deploy Marp Slides

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Marp CLI
        run: npm install -g @marp-team/marp-cli

      - name: Build slides
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const { execSync } = require('child_process');

            // Create dist directory
            if (!fs.existsSync('dist')) {
              fs.mkdirSync('dist');
            }

            // Get all markdown files in docs directory
            const docsDir = 'docs';
            const files = fs.readdirSync(docsDir)
              .filter(file => file.endsWith('.md') && file !== 'README.md')
              .map(file => path.join(docsDir, file));

            // Build each slide
            for (const file of files) {
              const filename = path.basename(file, '.md');
              console.log(`Building ${filename}...`);

              // Build HTML
              execSync(`marp "${file}" -o "dist/${filename}.html" --html`, { stdio: 'inherit' });
            }

            // Copy pictures directory to dist
            const picturesDir = path.join(docsDir, 'pictures');
            if (fs.existsSync(picturesDir)) {
              const destPicturesDir = path.join('dist', 'pictures');
              console.log('Copying pictures directory...');
              if (!fs.existsSync(destPicturesDir)) {
                fs.mkdirSync(destPicturesDir, { recursive: true });
              }
              execSync(`cp -r "${picturesDir}/"* "${destPicturesDir}/"`, { stdio: 'inherit' });
            }

      - name: Create index page
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read all markdown files to get titles
            const docsDir = 'docs';
            const files = fs.readdirSync(docsDir)
              .filter(file => file.endsWith('.md') && file !== 'README.md')
              .map(file => path.join(docsDir, file));

            // Extract titles from markdown files
            const slides = files.map(file => {
              const filename = path.basename(file, '.md');
              const content = fs.readFileSync(file, 'utf8');
              const titleMatch = content.match(/^# (.+)$/m);
              const title = titleMatch ? titleMatch[1] : filename;
              return { filename, title };
            });

            // Generate index HTML
            const html = `<!DOCTYPE html>
            <html lang="ja">
            <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1.0">
              <title>Marp Slides - AI Agent Study</title>
              <script src="https://cdn.tailwindcss.com"></script>
            </head>
            <body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
              <div class="container mx-auto max-w-5xl px-4 py-16">
                <header class="text-center mb-12">
                  <h1 class="text-5xl font-extrabold text-transparent bg-clip-text bg-gradient-to-r from-blue-600 to-indigo-600 mb-3">
                    Marp Slides
                  </h1>
                  <p class="text-gray-600 text-lg">AI Agent Study プレゼンテーション資料</p>
                </header>

                <div class="grid gap-6 md:grid-cols-2">
            ${slides.map(slide => `      <a href="${slide.filename}.html" class="group block bg-white rounded-xl shadow-md hover:shadow-xl transition-all duration-300 overflow-hidden border border-gray-100 hover:border-blue-300 transform hover:-translate-y-1">
                      <div class="p-6">
                        <div class="flex items-start justify-between mb-3">
                          <h2 class="text-xl font-bold text-gray-800 group-hover:text-blue-600 transition-colors">
                            ${slide.title}
                          </h2>
                          <svg class="w-6 h-6 text-blue-500 opacity-0 group-hover:opacity-100 transition-opacity" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
                          </svg>
                        </div>
                        <div class="flex items-center gap-2 text-sm text-gray-500">
                          <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                          </svg>
                          <span>HTMLスライド</span>
                        </div>
                      </div>
                    </a>`).join('\n')}
                </div>

                <footer class="mt-16 text-center text-gray-500 text-sm">
                  <p>Powered by <a href="https://marp.app/" class="text-blue-600 hover:underline" target="_blank" rel="noopener">Marp</a></p>
                </footer>
              </div>
            </body>
            </html>`;

            fs.writeFileSync('dist/index.html', html);
            console.log('Index page created successfully');

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './dist'

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
